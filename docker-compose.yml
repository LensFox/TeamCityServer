version: "3.1"

# Default ${TEAMCITY_VERSION} is defined in .env file

# ./buildserver_pgdata - Posgres DB data
# ./data_dir - TeamCity data directory
# ./teamcity-server-logs - logs of primary TeamCity server
# ./agents/agent-1/conf - configuration directory for the first build agent
# ./agents/agent-2/conf - configuration directory for the second build agent

services:
  db:
    image: postgres:13
    restart: always
    environment:
      - POSTGRES_PASSWORD=teamcity_password
      - POSTGRES_USER=teamcity_user
      - POSTGRES_DB=teamcity_db
      - PG_DATA=/var/lib/postgresql/data
    volumes:
      - ./buildserver_pgdata:/var/lib/postgresql/data
    ports:
      - 5433:5432

  teamcity:
    image: jetbrains/teamcity-server:${TEAMCITY_VERSION}
    ports:
      - "8112:8111"
    volumes:
      - ./data_dir:/data/teamcity_server/datadir
      - ./teamcity-server-logs:/opt/teamcity/logs
    depends_on:
      - db

  teamcity-agent-1:
    image: jetbrains/teamcity-agent:${TEAMCITY_VERSION}-linux-sudo
    privileged: true
    volumes:
      - ./agents/agent-1/conf:/data/teamcity_agent/conf
    environment:
      - DOCKER_IN_DOCKER=start
      - SERVER_URL=teamcity:8111
    depends_on:
      - teamcity
  teamcity-agent-2:
    image: jetbrains/teamcity-agent:${TEAMCITY_VERSION}-linux-sudo
    privileged: true
    volumes:
      - ./agents/agent-2/conf:/data/teamcity_agent/conf
    environment:
      - DOCKER_IN_DOCKER=start
      - SERVER_URL=teamcity:8111
    depends_on:
      - teamcity

  db-octopus:
    image: mcr.microsoft.com/mssql/server
    environment:
      SA_PASSWORD: ${SA_PASSWORD}
      ACCEPT_EULA: "Y"
    ports:
      - 1401:1433
    healthcheck:
      test:
        [
          "CMD",
          "/opt/mssql-tools/bin/sqlcmd",
          "-U",
          "sa",
          "-P",
          "${SA_PASSWORD}",
          "-Q",
          "select 1",
        ]
      interval: 10s
      retries: 10
    volumes:
      - sqlvolume:/var/opt/mssql
    restart: always

  octopus-server:
    image: docker.packages.octopushq.com/octopusdeploy/octopusdeploy:latest
    depends_on:
      - db-octopus
    environment:
      ACCEPT_EULA: "Y"
      DB_CONNECTION_STRING: Server=db-octopus,1433;Database=OctopusDeploy;User=sa;Password=${SA_PASSWORD}
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      SKIP_IMPORT_VERSION_CHECK: "true"
      OCTOPUS_SERVER_BASE64_LICENSE: ""
      MASTER_KEY: "vkLjnBM56jn3NCptEkqJIw=="
      IMPORT_PASSWORD: "${ADMIN_PASSWORD}"
    ports:
      - "8080:8080"
      - "10943:10943"
    volumes:
      - repository:/repository
      - artifacts:/artifacts
      - taskLogs:/taskLogs
      - cache:/cache
      - import:/import
    restart: always

  listening-tentacle:
    image: docker.packages.octopushq.com/octopusdeploy/tentacle:6.0.0
    depends_on:
      - octopus-server
    environment:
      ACCEPT_EULA: "Y"
      ServerUsername: ${ADMIN_USERNAME}
      ServerPassword: ${ADMIN_PASSWORD}
      TargetEnvironment: "Development"
      TargetRole: "app-server"
      ServerUrl: "http://octopus-server:8080"
      ServerApiKey: "vkLjnBM56jn3NCptEkqJIw=="
    stdin_open: true #Process sits and waits for ReadLine
    volumes:
      - "./docker/Volumes/listening-tentacle/Applications:/Applications"
      - "./docker/Volumes/listening-tentacle/TentacleHome:/TentacleHome"
    restart: always
volumes:
  repository:
  artifacts:
  taskLogs:
  cache:
  import:
  sqlvolume:
  host-tentacle-HostTentacleApplications:
  host-tentacle-HostTentacleHome:
